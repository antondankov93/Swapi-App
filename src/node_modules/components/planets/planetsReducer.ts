import produce from "immer";
import {
    FETCH_ALL_PLANETS_REQUEST,
    FETCH_ALL_PLANETS_SUCCESS, FETCH_PLANET_BY_ID_REQUESTED,
    planetsActionTypes,
    PUT_ALL_PLANETS
} from "components/planets/planetsTypes";

export type PlanetsStateType = {
    allPlanets: any,
    isLoading: boolean,
    isError: boolean,
    favorite: Array<string>
}

const initialState: PlanetsStateType = {
    allPlanets: [],
    isLoading: false,
    isError: false,
    favorite: []
}


export const planetsReducer = (state = initialState, action: planetsActionTypes):PlanetsStateType =>
    produce(state, draft => {
            switch (action.type) {
                case FETCH_ALL_PLANETS_REQUEST:
                    draft.isLoading = true
                    break

                case FETCH_ALL_PLANETS_SUCCESS:
                    draft.isLoading = false
                    break

                case FETCH_PLANET_BY_ID_REQUESTED:
                    draft.isLoading = false
                    break

                case PUT_ALL_PLANETS:
                    draft.isLoading = true
                    draft.allPlanets.splice(0, draft.allPlanets.length)
                    //@ts-ignore
                    action.payload.map(p => draft.allPlanets.push(p))
                    break

                default:
                    break
            }
        }
    )