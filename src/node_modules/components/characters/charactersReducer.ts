import produce from "immer";
import {
    charactersActionTypes,
    FETCH_ALL_CHARACTERS_REQUEST,
    FETCH_ALL_CHARACTERS_SUCCESS,
    PUT_ALL_CHARACTERS
} from "components/characters/charactersTypes";

export type CharactersStateType = {
    allCharacters: any,
    isLoading: boolean,
    isError: boolean,
    favorite: []
}

const initialState: CharactersStateType = {
    allCharacters: [],
    isLoading: false,
    isError: false,
    favorite: []
}

export const charactersReducer = (state = initialState, action: charactersActionTypes):CharactersStateType =>
    produce(state, draft => {
            switch (action.type) {
                case FETCH_ALL_CHARACTERS_REQUEST:
                    draft.isLoading = true
                    break

                case FETCH_ALL_CHARACTERS_SUCCESS:
                    draft.isLoading = false
                    break

                case PUT_ALL_CHARACTERS:
                    draft.isLoading = true
                    draft.allCharacters.splice(0, draft.allCharacters.length)
                    //@ts-ignore
                    action.payload.map(c => draft.allCharacters.push(c))
                    break

                default:
                    break
            }
        }
    )