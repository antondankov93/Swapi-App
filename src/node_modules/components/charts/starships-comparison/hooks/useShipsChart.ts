import {useDispatch, useSelector} from "react-redux";
import {AppState} from "init/rootReducer";
import {PlanetsPopulationStateType} from "components/charts/planets-comparison/reducer";
import {useEffect, useState} from "react";
import {ShipsComparisonStateType} from "components/charts/starships-comparison/reducer";


export const useShipsChart = () => {
    const {labels, isLoading, costData, lengthData, passengersData} = useSelector<AppState, ShipsComparisonStateType>(state => state.shipsComparisonReducer)

    const [chartOptions, setChartOptions] = useState({})
    const [costChartData, setCostChartData] = useState({})
    const [lengthChartData, setLengthChartData] = useState({})
    const [passengersChartData, setPassengersChartData] = useState({})


    const costChart = () => {
        setCostChartData({
            //@ts-ignore
            labels: labels,
            datasets: [
                {
                    label: 'Credits items',
                    //@ts-ignore
                    data: costData,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',

                    ],
                    borderWidth: 1,
                }
            ],
        })
    }

    const lengthChart = () => {
        setLengthChartData({
            //@ts-ignore
            labels: labels,
            datasets: [
                {
                    label: 'meters',
                    //@ts-ignore
                    data: lengthData,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',

                    ],
                    borderWidth: 1,
                }
            ],
        })
    }

    const passengersChart = () => {
        setPassengersChartData({
            //@ts-ignore
            labels: labels,
            datasets: [
                {
                    label: 'Peoples',
                    //@ts-ignore
                    data: passengersData,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',

                    ],
                    borderWidth: 1,
                }
            ],
        })
    }

    const getChartOptions = () => {
        setChartOptions({
            scales: {
                yAxes: [{
                    ticks: {
                        autoSkip: true,
                        beginAtZero: true
                    }
                }],
            }

        })
    }



    return {
        isLoading,
        chartOptions,
        costChartData,
        lengthChartData,
        passengersChartData,
        getChartOptions,
        costChart,
        lengthChart,
        passengersChart
    }


}

