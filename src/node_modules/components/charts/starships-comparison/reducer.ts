import produce from "immer";
import {
    ADD_SHIP_FOR_COMPARISON, DELETE_ALL_SHIPS_FOR_COMPARISON, FETCH_DATA_FOR_SHIPS_COMPARISON,
    FETCH_NEW_SHIPS_PAGE_REQUEST,
    FETCH_NEW_SHIPS_PAGE_SUCCESS, PUT_DATA_FOR_SHIPS_COMPARISON, REMOVE_SHIP_FOR_COMPARISON,
    SET_DATA_SHIPS_FOR_PAGINATION,
    shipsPaginationType
} from "components/charts/starships-comparison/types";



export type ShipsComparisonStateType = {
    currentPage: number,
    shipsList: any,
    isLoading: boolean,
    countAllShips: null | number,
    shipsForComparison: Array<number>,
    labels: any,
    costData: any,
    lengthData: any,
    passengersData: any,
}

const initialState: ShipsComparisonStateType = {
    currentPage: 1,
    shipsList: [],
    isLoading: false,
    countAllShips: null as number | null,
    shipsForComparison: [],
    labels: [],
    costData:  [],
    lengthData:  [],
    passengersData:  [],
}


export const shipsComparisonReducer = (state = initialState, action: shipsPaginationType): ShipsComparisonStateType =>
    produce(state, draft => {
            switch (action.type) {

                case FETCH_NEW_SHIPS_PAGE_REQUEST:
                    draft.isLoading = true
                    draft.currentPage = action.payload
                    break

                case FETCH_NEW_SHIPS_PAGE_SUCCESS:
                    draft.isLoading = false
                    break

                case SET_DATA_SHIPS_FOR_PAGINATION:
                    draft.isLoading = true
                    draft.shipsList.splice(0, draft.shipsList.length)
                    //@ts-ignore
                    action.payload?.results.map(p => draft.shipsList.push(p))
                    draft.countAllShips = action.payload?.count
                    break

                case ADD_SHIP_FOR_COMPARISON:
                    //@ts-ignore
                    draft.shipsForComparison.push(action.payload)
                    break

                case REMOVE_SHIP_FOR_COMPARISON:
                    //@ts-ignore
                    draft.shipsForComparison = draft.shipsForComparison.filter(s => s !== action.payload)
                    break
                case DELETE_ALL_SHIPS_FOR_COMPARISON:
                    draft.shipsForComparison.splice(0, draft.shipsForComparison.length)
                    break

                case FETCH_DATA_FOR_SHIPS_COMPARISON:
                    draft.isLoading = true
                    break
                case PUT_DATA_FOR_SHIPS_COMPARISON:
                    //@ts-ignore
                    action.payload.forEach(item => {
                        draft.labels.push(item.name)
                        draft.costData.push(+item.cost_in_credits)
                        draft.lengthData.push(+item.length)
                        draft.passengersData.push(+item.passengers)
                    })
                    break


                default:
                    break
            }
        }
    )