import produce from "immer";
import {
    FETCH_NEW_SHIPS_PAGE_REQUEST,
    FETCH_NEW_SHIPS_PAGE_SUCCESS,
    SET_DATA_SHIPS_FOR_PAGINATION,
    shipsPaginationType
} from "components/charts/starships-comparison/types";


export type ShipsComparisonStateType = {
    currentPage: number,
    shipsList: any,
    isLoading: boolean,
    countAllShips: null | number,
}

const initialState: ShipsComparisonStateType = {
    currentPage: 1,
    shipsList: [],
    isLoading: false,
    countAllShips: null as number | null
}


export const shipsComparisonReducer = (state = initialState, action: shipsPaginationType): ShipsComparisonStateType =>
    produce(state, draft => {
            switch (action.type) {

                case FETCH_NEW_SHIPS_PAGE_REQUEST:
                    draft.isLoading = true
                    draft.currentPage = action.payload
                    break

                case FETCH_NEW_SHIPS_PAGE_SUCCESS:
                    draft.isLoading = false
                    break

                case SET_DATA_SHIPS_FOR_PAGINATION:
                    draft.isLoading = true
                    draft.shipsList.splice(0, draft.shipsList.length)
                    //@ts-ignore
                    action.payload?.results.map(p => draft.shipsList.push(p))
                    draft.countAllShips = action.payload?.count
                    break

                default:
                    break
            }
        }
    )