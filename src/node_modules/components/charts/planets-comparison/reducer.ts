import produce from "immer";
import {
    ADD_PLANET_FOR_COMPARISON,
    DELETE_ALL_PLANETS_FOR_COMPARISON, FETCH_DATA_FOR_PLANETS_COMPARISON,
    FETCH_NEW_PLANET_PAGE_REQUEST,
    FETCH_NEW_PLANET_PAGE_SUCCESS,
    planetsPaginationType, PUT_DATA_FOR_PLANETS_COMPARISON,
    REMOVE_PLANET_FOR_COMPARISON,
    SET_DATA_PLANETS_FOR_PAGINATION
} from "components/charts/planets-comparison/types";


export type PlanetsPopulationStateType = {
    currentPage: number,
    planetsList: any,
    isLoading: boolean,
    countAllPlanets: null | number,
    planetsForComparison: any,
    labels: any,
    populationData: any,
    rotationPeriodData: any,
    diameterData: any,

}

const initialState: PlanetsPopulationStateType = {
    currentPage: 1,
    planetsList: [],
    isLoading: false,
    countAllPlanets: null as number | null,
    planetsForComparison: [],
    labels: [],
    populationData: [],
    rotationPeriodData: [],
    diameterData: []
}


export const planetsComparisonReducer = (state = initialState, action: planetsPaginationType):PlanetsPopulationStateType =>
    produce(state, draft => {
            switch (action.type) {

                case FETCH_NEW_PLANET_PAGE_REQUEST:
                    draft.isLoading = true
                    draft.currentPage = action.payload
                    break

                case FETCH_NEW_PLANET_PAGE_SUCCESS:
                    draft.isLoading = false
                    break

                case SET_DATA_PLANETS_FOR_PAGINATION:
                    draft.isLoading = true
                    draft.planetsList.splice(0, draft.planetsList.length)
                    //@ts-ignore
                    action.payload?.results.map(p => draft.planetsList.push(p))
                    draft.countAllPlanets = action.payload?.count
                    break

                case ADD_PLANET_FOR_COMPARISON:
                    //@ts-ignore
                    draft.planetsForComparison.push(action.payload)
                    break

                case REMOVE_PLANET_FOR_COMPARISON:
                    //@ts-ignore
                    draft.planetsForComparison = draft.planetsForComparison.filter(s => s !== action.payload)
                    break
                case DELETE_ALL_PLANETS_FOR_COMPARISON:
                    draft.planetsForComparison.splice(0, draft.planetsForComparison.length)
                    break

                case FETCH_DATA_FOR_PLANETS_COMPARISON:
                    draft.isLoading = true
                    break
                case PUT_DATA_FOR_PLANETS_COMPARISON:
                    //@ts-ignore
                    action.payload.forEach(item => {
                        draft.labels.push(item.name)
                        draft.populationData.push(item.population)
                        draft.diameterData.push(item.diameter)
                        draft.rotationPeriodData.push(item.rotation_period)
                    })
                    break

                default:
                    break
            }
        }
    )