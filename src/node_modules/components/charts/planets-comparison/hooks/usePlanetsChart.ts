import {useDispatch, useSelector} from "react-redux";
import {AppState} from "init/rootReducer";
import {PlanetsPopulationStateType} from "components/charts/planets-comparison/reducer";
import {useEffect, useState} from "react";


export const usePlanetsChart = () => {
    const dispatch = useDispatch();
    const {populationData, diameterData, rotationPeriodData, labels, isLoading} = useSelector<AppState, PlanetsPopulationStateType>(state => state.planetsComparisonReducer)

    const [chartOptions, setChartOptions] = useState({})
    const [populationChartData, setPopulationChartData] = useState({})
    const [diameterChartData, setDiameterChartData] = useState({})
    const [rotationPeriodChartData, setRotationPeriodChartData] = useState({})


    const populationChart = () => {
        setPopulationChartData({
            //@ts-ignore
            labels: labels,
            datasets: [
                {
                    label: 'Peoples',
                    //@ts-ignore
                    data: populationData,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',

                    ],
                    borderWidth: 1,
                }
            ],
        })
    }

    const diameterChart = () => {
        setDiameterChartData({
            //@ts-ignore
            labels: labels,
            datasets: [
                {
                    label: 'Km',
                    //@ts-ignore
                    data: diameterData,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',

                    ],
                    borderWidth: 1,
                }
            ],
        })
    }

    const rotationPeriodChart = () => {
        setRotationPeriodChartData({
            //@ts-ignore
            labels: labels,
            datasets: [
                {
                    label: 'Earth days',
                    //@ts-ignore
                    data: rotationPeriodData,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',

                    ],
                    borderWidth: 1,
                }
            ],
        })
    }

    const getChartOptions = () => {
        setChartOptions({
            scales: {
                yAxes: [{
                    ticks: {
                        autoSkip: true,
                        beginAtZero: true
                    }
                }],
            }

        })
    }



    return {
        isLoading,
        chartOptions,
        populationChartData,
        diameterChartData,
        rotationPeriodChartData,
        getChartOptions,
        populationChart,
        diameterChart,
        rotationPeriodChart
    }


}

