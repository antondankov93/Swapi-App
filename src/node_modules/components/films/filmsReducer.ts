import produce from 'immer';
import {
    FETCH_ALL_FILMS_REQUEST,
    FETCH_ALL_FILMS_SUCCESS,
    filmsActionTypes,
    PUT_ALL_FILMS
} from "components/films/filmsTypes";

type FilmsStateType = {
    allFilms: Array<Object>,
    isLoading: boolean,
    isError: boolean,
    favorite: Array<string>
}

const initialState: FilmsStateType = {
    allFilms: [],
    isLoading: false,
    isError: false,
    favorite: []
}


export const filmsReducer = (state = initialState, action: filmsActionTypes): FilmsStateType =>
    produce(state, draft => {
            switch (action.type) {
                case FETCH_ALL_FILMS_REQUEST:
                    draft.isLoading = true
                    break

                case FETCH_ALL_FILMS_SUCCESS:
                    draft.isLoading = false
                    break

                case PUT_ALL_FILMS:
                    draft.isLoading = true
                    draft.allFilms.splice(0, draft.allFilms.length)
                    //@ts-ignore
                    action.payload.map(f => draft.allFilms.push(f))
                    break

                default:
                    break
            }
        }
    )
