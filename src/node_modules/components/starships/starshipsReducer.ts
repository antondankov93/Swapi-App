import produce from "immer";
import {
    FETCH_ALL_STARSHIPS_REQUEST,
    FETCH_ALL_STARSHIPS_SUCCESS,
    PUT_ALL_STARSHIPS,
    starshipsActionTypes
} from "components/starships/starshipsTypes";

type StarshipsStateType = {
    allStarships: Array<Object>,
    isLoading: boolean,
    isError: boolean,
    favorite: Array<string>
}

const initialState: StarshipsStateType = {
    allStarships: [],
    isLoading: false,
    isError: false,
    favorite: []
}

export const starshipsReducer = (state = initialState, action: starshipsActionTypes):StarshipsStateType =>
    produce(state, draft => {
            switch (action.type) {
                case FETCH_ALL_STARSHIPS_REQUEST:
                    draft.isLoading = true
                    break

                case FETCH_ALL_STARSHIPS_SUCCESS:
                    draft.isLoading = false
                    break

                case PUT_ALL_STARSHIPS:
                    draft.isLoading = true
                    draft.allStarships.splice(0, draft.allStarships.length)
                    //@ts-ignore
                    action.payload.map(f => draft.allStarships.push(f))
                    break

                default:
                    break
            }
        }
    )